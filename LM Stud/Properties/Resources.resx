<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="LM_Stud_256" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\LM Stud 256.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="LM_Stud" xml:space="preserve">
    <value>LM Stud</value>
  </data>
  <data name="Error_Whisper_model_not_found" xml:space="preserve">
    <value>Error Whisper model not found.</value>
  </data>
  <data name="VAD_model_not_found__use_Basic_VAD_" xml:space="preserve">
    <value>VAD model not found, use Basic VAD?</value>
  </data>
  <data name="Error_initialising_whisper" xml:space="preserve">
    <value>Error initialising whisper.</value>
  </data>
  <data name="Error_starting_whisper_transcription" xml:space="preserve">
    <value>Error starting whisper transcription.</value>
  </data>
  <data name="Conversation_too_long_for_context" xml:space="preserve">
    <value>Conversation too long for context.</value>
  </data>
  <data name="Generate" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="_0_F2__Tok_s" xml:space="preserve">
    <value>{0:F2} Tok/s</value>
    <comment>Tokens per second</comment>
  </data>
  <data name="First_token_time__" xml:space="preserve">
    <value>First token time: </value>
    <comment>aka. time to first token</comment>
  </data>
  <data name="_Tokens" xml:space="preserve">
    <value> Tokens</value>
  </data>
  <data name="_s" xml:space="preserve">
    <value> s</value>
    <comment>Short for seconds</comment>
  </data>
  <data name="Error_reading_file___0_" xml:space="preserve">
    <value>Error reading file: {0}</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="Please_select_an_item_from_both_lists_" xml:space="preserve">
    <value>Please select an item from both lists.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Model_search_error___0_" xml:space="preserve">
    <value>Model search error: {0}</value>
  </data>
  <data name="HTTP_Error_loading_files_for_" xml:space="preserve">
    <value>HTTP Error loading files for </value>
  </data>
  <data name="JSON_Parse_Error_for_" xml:space="preserve">
    <value>JSON Parse Error for </value>
  </data>
  <data name="Error_loading_files_for_" xml:space="preserve">
    <value>Error loading files for </value>
  </data>
  <data name="Failed_to_create_directory___0_" xml:space="preserve">
    <value>Failed to create directory: {0}</value>
  </data>
  <data name="Downloaded__0__to___1_" xml:space="preserve">
    <value>Downloaded {0} to:
{1}</value>
  </data>
  <data name="Download_failed_with_error_code___0_" xml:space="preserve">
    <value>Download failed with error code: {0}</value>
  </data>
  <data name="Download_failed___0_" xml:space="preserve">
    <value>Download failed: {0}</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="_0___1__2_" xml:space="preserve">
    <value>{0}/{1}{2}</value>
  </data>
  <data name="Models_folder_not_found__please_specify_a_valid_folder_in_the_Settings_tab" xml:space="preserve">
    <value>Models folder not found, please specify a valid folder in the Settings tab.</value>
  </data>
  <data name="Error_setting_system_prompt" xml:space="preserve">
    <value>Error setting system prompt</value>
  </data>
  <data name="Loading__" xml:space="preserve">
    <value>Loading: </value>
  </data>
  <data name="Done_loading__" xml:space="preserve">
    <value>Done loading: </value>
  </data>
  <data name="Model_unloaded" xml:space="preserve">
    <value>Model unloaded</value>
  </data>
  <data name="A_changed_setting_requires_the_model_to_be_reloaded__reload_now_" xml:space="preserve">
    <value>A changed setting requires the model to be reloaded, reload now?</value>
  </data>
  <data name="Folder_not_found" xml:space="preserve">
    <value>Folder not found</value>
  </data>
  <data name="ToolTip_textSystemPrompt" xml:space="preserve">
    <value>Tell the AI who or what to be, how to respond, or provide initial context.</value>
  </data>
  <data name="ToolTip_textModelsPath" xml:space="preserve">
    <value>Path to the folder containing your .gguf model files.</value>
  </data>
  <data name="ToolTip_numCtxSize" xml:space="preserve">
    <value>Context size (max tokens). Higher values improve memory but use more RAM.</value>
  </data>
  <data name="ToolTip_numGPULayers" xml:space="preserve">
    <value>Number of layers to offload to GPU, more layers improve performance but increase GPU memory usage.</value>
  </data>
  <data name="ToolTip_numTemp" xml:space="preserve">
    <value>Temperature controls randomness. Lower values make responses more deterministic; higher values produce more creative outputs.</value>
  </data>
  <data name="ToolTip_numNGen" xml:space="preserve">
    <value>Number of tokens to generate per response (max length of the AI's reply), -1 = no limit.</value>
  </data>
  <data name="ToolTip_comboNUMAStrat" xml:space="preserve">
    <value>NUMA (Non-Uniform Memory Access) strategy. Adjust if using multi-socket CPUs or specific memory configurations.</value>
  </data>
  <data name="ToolTip_numRepPen" xml:space="preserve">
    <value>Repetition penalty reduces repetitive outputs. Higher values strongly discourage repeated phrases.</value>
  </data>
  <data name="ToolTip_numTopK" xml:space="preserve">
    <value>Top-K sampling: limits token choice to the K most probable tokens, improving coherency.</value>
  </data>
  <data name="ToolTip_numTopP" xml:space="preserve">
    <value>Top-P sampling: controls diversity by choosing from the smallest possible set of tokens whose cumulative probability exceeds this threshold.</value>
  </data>
  <data name="ToolTip_numMinP" xml:space="preserve">
    <value>Min-P sampling: keeps only tokens whose individual probability is at least this fraction of the top token’s probability, trimming unlikely options and reducing noise.</value>
  </data>
  <data name="ToolTip_numBatchSize" xml:space="preserve">
    <value>Batch size for processing tokens during generation. Higher values can improve performance at the cost of higher RAM usage.</value>
  </data>
  <data name="ToolTip_groupCPUParams" xml:space="preserve">
    <value>Parameters controlling text generation on CPU.</value>
  </data>
  <data name="ToolTip_numThreads" xml:space="preserve">
    <value>CPU threads for token generation. Typically, around 75% of your physical cores is optimal to prevent oversaturating the memory controller.</value>
  </data>
  <data name="ToolTip_checkMMap" xml:space="preserve">
    <value>Map the model file to memory for on-demand loading, may improve model load times.</value>
  </data>
  <data name="ToolTip_checkMLock" xml:space="preserve">
    <value>Lock the model in RAM.</value>
  </data>
  <data name="ToolTip_groupCPUParamsBatch" xml:space="preserve">
    <value>Parameters for the pre-generation step (batch preparation).</value>
  </data>
  <data name="ToolTip_numThreadsBatch" xml:space="preserve">
    <value>CPU threads used for batch preparation.</value>
  </data>
  <data name="ToolTip_numVadThreshold" xml:space="preserve">
    <value>Voice Activity Detection threashold, lower values increase sensitivity to speech activation.</value>
  </data>
  <data name="ToolTip_numFreqThreshold" xml:space="preserve">
    <value>High-pass filter cutoff frequency. Higher values reduce low frequency noise.</value>
  </data>
  <data name="ToolTip_checkSpeak" xml:space="preserve">
    <value>Speak the generated responses using the computers default voice.</value>
  </data>
  <data name="ToolTip_checkVoiceInput" xml:space="preserve">
    <value>An intermediate check state (filled in) means it will transcribe spoken words without generating, when checked it will automatically generate.</value>
  </data>
  <data name="ToolTip_textGoogleApiKey" xml:space="preserve">
    <value>A Google API key is required to use the search tool, you can get a free one for 100 searches per day.</value>
  </data>
  <data name="ToolTip_textGoogleSearchID" xml:space="preserve">
    <value>Create your own Google Programmable Search Engine and copy its "Search engine ID" here.</value>
  </data>
  <data name="ToolTip_checkFileListEnable" xml:space="preserve">
    <value>Enable the tool for listing the contents of a folder under the base path.</value>
  </data>
  <data name="ToolTip_checkFileCreateEnable" xml:space="preserve">
    <value>Enable the tool for creating new files under the base path.</value>
  </data>
  <data name="ToolTip_checkFileReadEnable" xml:space="preserve">
    <value>Enable the tool for reading the contents of files under the base path.</value>
  </data>
  <data name="ToolTip_checkFileWriteEnable" xml:space="preserve">
    <value>Enable the tool for writing to files under the base path.</value>
  </data>
  <data name="ToolTip_textFileBasePath" xml:space="preserve">
    <value>File access is relative to this path and canonically restricted to files and folders under this path only.</value>
  </data>
  <data name="ToolTip_linkFileInstruction" xml:space="preserve">
    <value>Set an instruction to optimize the way the assistant uses the file tools.</value>
  </data>
  <data name="ToolTip_numWakeWordSimilarity" xml:space="preserve">
    <value>Set how similar the detected wake word must be to activate transcription.</value>
  </data>
  <data name="ToolTip_textWakeWord" xml:space="preserve">
    <value>Optional wake word phrase required before transcription begins.</value>
  </data>
  <data name="ToolTip_radioBasicVAD" xml:space="preserve">
    <value>Use simple energy-based voice activity detection.</value>
  </data>
  <data name="ToolTip_radioWhisperVAD" xml:space="preserve">
    <value>Use Whisper's neural VAD model for speech detection.</value>
  </data>
  <data name="ToolTip_comboVADModel" xml:space="preserve">
    <value>Select the Whisper VAD model used for speech detection.</value>
  </data>
  <data name="ToolTip_butVADDown" xml:space="preserve">
    <value>Download Whisper VAD models.</value>
  </data>
  <data name="_0____1_" xml:space="preserve">
    <value>{0}: {1}</value>
  </data>
  <data name="The_model_could_not_be_loaded_" xml:space="preserve">
    <value>The model could not be loaded.</value>
  </data>
  <data name="No_model_has_been_loaded_" xml:space="preserve">
    <value>No model has been loaded.</value>
  </data>
  <data name="Failed_to_create_the_model_context_" xml:space="preserve">
    <value>Failed to create the model context.</value>
  </data>
  <data name="Failed_to_create_the_sampler_" xml:space="preserve">
    <value>Failed to create the sampler.</value>
  </data>
  <data name="The_chat_template_could_not_be_applied_" xml:space="preserve">
    <value>The chat template could not be applied.</value>
  </data>
  <data name="The_conversation_is_too_long_for_the_context_window_" xml:space="preserve">
    <value>The conversation is too long for the context window.</value>
  </data>
  <data name="The_model_backend_returned_a_decode_error_" xml:space="preserve">
    <value>The model backend returned a decode error.</value>
  </data>
  <data name="An_index_was_out_of_range_" xml:space="preserve">
    <value>An index was out of range.</value>
  </data>
  <data name="Failed_to_tokenize_the_prompt_" xml:space="preserve">
    <value>Failed to tokenize the prompt.</value>
  </data>
  <data name="Failed_to_convert_a_token_" xml:space="preserve">
    <value>Failed to convert a token.</value>
  </data>
  <data name="Unable_to_parse_the_chat_message_" xml:space="preserve">
    <value>Unable to parse the chat message.</value>
  </data>
  <data name="Error_loading_model" xml:space="preserve">
    <value>Error loading model</value>
  </data>
  <data name="Error_creating_session" xml:space="preserve">
    <value>Error creating session</value>
  </data>
  <data name="Error_creating_context" xml:space="preserve">
    <value>Error creating context</value>
  </data>
  <data name="Error_creating_sampler" xml:space="preserve">
    <value>Error creating sampler</value>
  </data>
<data name="Modified_global_settings_are_overridden_by_the_Model_Settings_for_this_model_" xml:space="preserve">
	<value>Modified global settings are overridden by the Model Settings for this model.</value>
</data>
</root>